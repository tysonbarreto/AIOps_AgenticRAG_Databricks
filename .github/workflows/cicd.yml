name: 'Asset Bundle & App deployment'

on:
    push:
      branches: ['main']

jobs:

  ci:
    name: 'Update source code'
    runs-on: ubuntu-latest

    steps:
      # Check out this repo, so that this workflow can access it.
      - uses: actions/checkout@v3

      - name: "Build app.yml file"
        run: |
          cat > app.yml << EOF
          command: ['streamlit', 'run', 'app.py']
          env:
            - name: 'OPENAI_API_KEY'
              value: ${{ secrets.OPENAI_API_KEY }}
          EOF

      - name: Install uv
        uses: astral-sh/setup-uv@v5
  
      - name: Verify uv Installation
        run: |
          echo "Checking uv version:"
          uv --version

      - name: "Build wheel file"
        run: uv build --wheel

      - name: "Check folder"
        run: ls -lna

      - name: "Bring wheel file forward for deployment"
        run: cp dist/*.whl .

      - name: 'Initialise Databricks cli'
        uses: databricks/setup-cli@main
        env:
          DATABRICKS_HOST: ${{ secrets.DATABRICKS_HOST }}
          DATABRICKS_TOKEN: ${{ secrets.DATABRICKS_SP_TOKEN }}


      - name: 'Deploy bundle'     
      # Deploy the bundle to the "dev" target as defined
      # in the bundle's settings file.
      - run: databricks bundle deploy -t dev
        working-directory: .
        env:
          DATABRICKS_HOST: ${{ secrets.DATABRICKS_HOST }}
          DATABRICKS_TOKEN: ${{ secrets.DATABRICKS_SP_TOKEN }}
          DATABRICKS_BUNDLE_ENV: dev


  cd:
    name: 'Update deplpyed app'
    runs-on: ubuntu-latest
    needs:
      - ci
    steps:

      - name: 'Initialise Databricks cli'
        uses: databricks/setup-cli@main
        env:
          DATABRICKS_HOST: ${{ secrets.DATABRICKS_HOST }}
          DATABRICKS_TOKEN: ${{ secrets.DATABRICKS_SP_TOKEN }}

      - name: 'Initialise Databricks cli and deploy bundle'     
      - run: databricks apps deploy my-agentic-rag-app --source-code-path /Workspace/Users/tysonbarretto1991@gmail.com/.bundle/${bundle.name}/${bundle.target}/files
        env:
          DATABRICKS_HOST: ${{ secrets.DATABRICKS_HOST }}
          DATABRICKS_TOKEN: ${{ secrets.DATABRICKS_SP_TOKEN }}
          DATABRICKS_BUNDLE_ENV: dev